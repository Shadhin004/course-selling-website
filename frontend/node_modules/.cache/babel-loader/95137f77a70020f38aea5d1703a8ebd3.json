{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_SUCCESS, USER_LOGIN_REQUEST, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST, USER_REGISTER_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_RESET } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://127.0.0.1:8000/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://127.0.0.1:8000/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["I:/PROJECT FOLDER/React/React-django/E-Learning Update/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_SUCCESS","USER_LOGIN_REQUEST","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_SUCCESS","USER_REGISTER_REQUEST","USER_REGISTER_FAIL","USER_DETAILS_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_FAIL","USER_DETAILS_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_FAIL, \r\n\r\n    USER_LOGOUT,\r\n    \r\n    USER_REGISTER_SUCCESS, \r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n} from \"../constants/userConstants\";\r\n\r\n\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) =>{\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            'http://127.0.0.1:8000/api/users/login/',\r\n            { 'username':email, 'password':password },\r\n            config\r\n            )\r\n\r\n        dispatch ({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const logout =() =>(dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type:USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type:USER_DETAILS_RESET\r\n    })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) =>{\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            'http://127.0.0.1:8000/api/users/register/',\r\n            { 'name':name,  'email':email, 'password':password },\r\n            config\r\n            )\r\n\r\n        dispatch ({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch ({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) =>{\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `http://127.0.0.1:8000/api/users/${id}/`,            \r\n            config\r\n            )\r\n\r\n        dispatch ({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })    \r\n\r\n\r\n        \r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}